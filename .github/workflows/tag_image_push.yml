name: Build OS and EE image

on:
  push:
    branches:
      - "!*"
    tags:
      - "v5.*"
  workflow_dispatch:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for, e.g. 5.1.1, 5.0.1, 4.2.3'
        required: true
      RELEASE_VERSION:
        description: 'Version of the docker image e.g. 5.1.1, 5.1.1-1, defaults to HZ_VERSION'
        required: false

jobs:
  push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
         - variant: slim
           suffix: '-slim'
         - variant: ''
           suffix: ''
    env:
      DOCKER_ORG: hazelcast
      HZ_VERSION: ${{ github.event.inputs.HZ_VERSION }}
      RELEASE_VERSION: ${{ github.event.inputs.RELEASE_VERSION }}
    steps:
      - name: Set HZ version as environment variable
        run: |
          if [ -z "${{ env.HZ_VERSION }}" ]; then
             HZ_VERSION=${GITHUB_REF:11}
          else
             HZ_VERSION=${{ env.HZ_VERSION }}
          fi
          echo "HZ_VERSION=${HZ_VERSION}" >> $GITHUB_ENV

      - name: Set Release version as environment variable
        run: |
          if [ -z "${{ env.RELEASE_VERSION }}" ]; then
             RELEASE_VERSION=${{ env.HZ_VERSION }}
          else
             RELEASE_VERSION=${{ env.RELEASE_VERSION }}
          fi
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if latest tag should be pushed
        run: |
          FILTERED_TAGS=$(git tag --list "v*" |  grep -E -v '*BETA*' )
          LATEST_TAG=$((IFS=$'\n' && echo "${FILTERED_TAGS[*]}") | sort | tail -n 1)
          echo "PUSH_LATEST=$([[ "$LATEST_TAG" = "${GITHUB_REF:10}" ]] && echo yes || echo no)" >> $GITHUB_ENV

      - name: Print Push Latest
        run: |
          echo ${{ env.PUSH_LATEST }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.0.0

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.0.0
        with:
          version: v0.5.1

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build/Push OSS image
        run: |
          TAGS="--tag ${{ env.DOCKER_ORG }}/hazelcast:${{ env.RELEASE_VERSION }}${{ matrix.suffix }}"
          if [[ "${{ env.PUSH_LATEST }}" == "yes" ]]; then
            TAGS="${TAGS} --tag ${{ env.DOCKER_ORG }}/hazelcast:latest${{ matrix.suffix }}"
          fi
          docker buildx build --push \
            --build-arg HZ_VERSION=${{ env.HZ_VERSION }} \
            --build-arg HZ_VARIANT=${{ matrix.variant }} \
            ${TAGS} \
            --platform=linux/arm64,linux/amd64,linux/ppc64le hazelcast-oss

      - name: Build/Push EE image
        run: |
          TAGS="--tag ${{ env.DOCKER_ORG }}/hazelcast-enterprise:${{ env.RELEASE_VERSION }}${{ matrix.suffix }}"
          if [[ "${{ env.PUSH_LATEST }}" == "yes" ]]; then
            TAGS="${TAGS} --tag ${{ env.DOCKER_ORG }}/hazelcast-enterprise:latest${{ matrix.suffix }}"
          fi
          docker buildx build --push \
            --build-arg HZ_VERSION=${{ env.HZ_VERSION }} \
            --build-arg HZ_VARIANT=${{ matrix.variant }} \
            ${TAGS} \
            --platform=linux/arm64,linux/amd64,linux/ppc64le,linux/s390x hazelcast-enterprise

  post-push:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Update Docker Hub Description of OSS image
        if: env.PUSH_LATEST == 'yes'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: hazelcast/hazelcast
          short-description: Hazelcast Docker Image
          readme-filepath: ./README.md

      - name: Update Docker Hub Description of EE image
        if: env.PUSH_LATEST == 'yes'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: hazelcast/hazelcast-enterprise
          short-description: Hazelcast Enterprise Docker Image
          readme-filepath: ./README.md

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
