name: Build OSS snapshot image

on:
  workflow_dispatch:
    inputs:
      REF:
        description: 'The hazelcast-docker branch to build the image from'
        required: true
      HZ_REVISION:
        description: 'Commit id of Hazelcast snapshot jar'
        required: true
env:
  test_container_name_oss: hazelcast-oss-test

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      HZ_VERSION: ${{ steps.get_hz_versions.outputs.HZ_VERSION_OSS }}
      jdks: ${{ steps.jdks.outputs.jdks }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.REF }}

      - name: Get HZ versions
        id: get_hz_versions
        uses: hazelcast/docker-actions/get-hz-versions@master

      - name: Get supported JDKs
        id: jdks
        uses: hazelcast/docker-actions/get-supported-jdks@master
        with:
          HZ_VERSION: '${{ steps.get_hz_versions.outputs.HZ_VERSION_OSS }}'

  distribution-variants:
    uses: hazelcast/hazelcast-docker/.github/workflows/get-distribution-variants.yaml@master

  push:
    runs-on: ubuntu-latest
    needs:
      - prepare
      - distribution-variants
    strategy:
      fail-fast: false
      matrix:
        jdk: ${{ fromJSON(needs.prepare.outputs.jdks) }}
        variant: ${{ fromJSON(needs.distribution-variants.outputs.variants) }}
    env:
      DOCKER_REGISTRY: ${{ secrets.JFROG_REGISTRY }}

      # required by OSS get_hz_dist_zip function
      HZ_SNAPSHOT_INTERNAL_USERNAME: ${{ secrets.HZ_SNAPSHOT_INTERNAL_USERNAME }}
      HZ_SNAPSHOT_INTERNAL_PASSWORD: ${{ secrets.HZ_SNAPSHOT_INTERNAL_PASSWORD }}

      HZ_VERSION: ${{ needs.prepare.outputs.HZ_VERSION }}
      DOCKER_DIR: ref/hazelcast-oss
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.REF }}
          path: ref

      - name: Setup Docker
        uses: ./.github/actions/setup-docker

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Get OSS dist ZIP
        run: |
          . .github/scripts/oss-build.functions.sh
          HAZELCAST_OSS_ZIP_URL=$(get_hz_dist_zip "${{ matrix.variant.classifier }}" "${HZ_VERSION}")
        
          curl --fail --silent --show-error --location "$HAZELCAST_OSS_ZIP_URL" --output ${DOCKER_DIR}/hazelcast-distribution.zip;

      - name: Build Test OSS image
        run: |
          docker buildx build --load \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --tag hazelcast-oss:test \
            ${DOCKER_DIR}

      - name: Run smoke test against OSS image
        timeout-minutes: 2
        run: |
          .github/scripts/simple-smoke-test.sh hazelcast-oss:test "${{ env.test_container_name_oss }}" oss ${HZ_VERSION} "${{ matrix.jdk }}"

      - name: Get docker logs
        if: ${{ always() }}
        run: |
          DOCKER_LOG_FILE_OSS=docker-${{ env.test_container_name_oss }}${{ matrix.variant.suffix }}-jdk${{ matrix.jdk }}.log
          echo "DOCKER_LOG_FILE_OSS=${DOCKER_LOG_FILE_OSS}" >> $GITHUB_ENV
          docker logs "${{ env.test_container_name_oss }}" > "${DOCKER_LOG_FILE_OSS}"

      - name: Store docker logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs${{ matrix.variant.suffix }}-${{ github.job }}-jdk${{ matrix.jdk }}
          path: |
            ${{ env.DOCKER_LOG_FILE_OSS }}

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.JFROG_USERNAME }}
          password: ${{ secrets.JFROG_PASSWORD }}

      - name: Build/Push OSS image
        run: |
          set -eEuo pipefail ${RUNNER_DEBUG:+-x}
          . .github/scripts/get-tags-to-push.sh 
          . .github/scripts/docker.functions.sh
          
          VERSIONS=("$HZ_VERSION")
          
          IMAGE_NAME=$DOCKER_REGISTRY/docker/hazelcast/hazelcast
          DEFAULT_JDK="$(get_default_jdk ${DOCKER_DIR})"

          TAGS_TO_PUSH=$(augment_with_suffixed_tags "${VERSIONS[*]}" "${{ matrix.variant.suffix }}" "${{ matrix.jdk }}" "$DEFAULT_JDK")
          echo "TAGS_TO_PUSH=$TAGS_TO_PUSH"
          TAGS_ARG=""
          for tag in ${TAGS_TO_PUSH[@]}
          do
            TAGS_ARG="${TAGS_ARG} --tag ${IMAGE_NAME}:${tag}"
          done
          
          PLATFORMS="$(get_alpine_supported_platforms "${{ matrix.jdk }}")"
          docker buildx build --push \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --label hazelcast.revision=${{ inputs.HZ_REVISION }} \
            $TAGS_ARG \
            --platform=${PLATFORMS} ${DOCKER_DIR}
      - name: Slack notification
        uses: hazelcast/docker-actions/slack-notification@master
        if: failure() && github.triggering_actor == 'devOpsHazelcast'
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}
