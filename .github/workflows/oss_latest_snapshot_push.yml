name: Build OSS snapshot image

on:
  workflow_dispatch:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for'
        required: true
      HZ_REVISION:
        description: 'Commit id of Hazelcast snapshot jar'
        required: true
env:
  test_container_name_oss: hazelcast-oss-test

jobs:
  push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        jdk: [ '11', '17', '21' ]
        variant: [ 'slim','' ]
        include:
          - variant: slim
            suffix: '-slim'
          - variant: ''
            suffix: ''
    env:
      DOCKER_ORG: hazelcast
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.5.1

      - name: Build Test OSS image
        run: |
          docker buildx build --load \
            --build-arg HZ_VERSION=${{ github.event.inputs.HZ_VERSION }} \
            --build-arg HZ_VARIANT=${{ matrix.variant }} \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --tag hazelcast-oss:test \
            hazelcast-oss

      - name: Run smoke test against OSS image
        timeout-minutes: 2
        run: |
          .github/scripts/simple-smoke-test.sh hazelcast-oss:test ${{ env.test_container_name_oss }}

      - name: Get docker logs
        if: ${{ always() }}
        run: |
          DOCKER_LOG_FILE_OSS=docker-hazelcast-oss-test${{ matrix.suffix }}.log
          echo "DOCKER_LOG_FILE_OSS=${DOCKER_LOG_FILE_OSS}" >> $GITHUB_ENV
          docker logs ${{ env.test_container_name_oss }} > ${DOCKER_LOG_FILE_OSS}

      - name: Store docker logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: docker-logs
          path: |
            ${{ env.DOCKER_LOG_FILE_OSS }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build/Push OSS image
        run: |
          DEFAULT_JDK=11
          if [[ "${{ matrix.jdk }}" == "$DEFAULT_JDK" ]]; then
            TAGS="--tag ${{ env.DOCKER_ORG }}/hazelcast:${{ github.event.inputs.HZ_VERSION }}${{ matrix.suffix }}"
          fi
          TAGS="${TAGS} --tag ${{ env.DOCKER_ORG }}/hazelcast:${{ github.event.inputs.HZ_VERSION }}${{ matrix.suffix }}-jdk${{ matrix.jdk }}"
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            if [[ "${{ matrix.jdk }}" == "$DEFAULT_JDK" ]]; then
              TAGS="${TAGS} --tag ${{ env.DOCKER_ORG }}/hazelcast:latest-snapshot${{ matrix.suffix }}"
            fi
            TAGS="${TAGS} --tag ${{ env.DOCKER_ORG }}/hazelcast:latest-snapshot${{ matrix.suffix }}-jdk${{ matrix.jdk }}"
          fi
          PLATFORMS="linux/arm64,linux/amd64"
          # no JDK17 for alpine ppc64le: https://github.com/alpinelinux/aports/commit/b048defcdb41950e18262d382fab8822dc3bd8ee
          if [[ "${{ matrix.jdk }}" != "17" ]]; then
            PLATFORMS="${PLATFORMS},linux/ppc64le"
          fi
          docker buildx build --push \
            --build-arg HZ_VERSION=${{ github.event.inputs.HZ_VERSION }} \
            --build-arg HZ_VARIANT=${{ matrix.variant }} \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --label hazelcast.revision=${{ github.event.inputs.HZ_REVISION }} \
            $TAGS \
            --platform=${PLATFORMS} hazelcast-oss