name: Build EE NLC snapshot image

on:
  workflow_call:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for'
        required: true
        type: string
      HZ_EE_REVISION:
        description: 'Commit id of Hazelcast Enterprise snapshot jar'
        required: true
        type: string
env:
  test_container_name_ee: hazelcast-ee-test

jobs:
  jdks:
    runs-on: ubuntu-latest
    outputs:
      jdks: ${{ steps.jdks.outputs.jdks }}
    steps:
      - name: Get supported JDKs
        id: jdks
        uses: hazelcast/hazelcast-docker/.github/actions/get-supported-jdks@reusable-build-pr
        with:
          HZ_VERSION: '${{ inputs.HZ_VERSION }}'

  push:
    runs-on: ubuntu-latest
    needs: jdks
    strategy:
      fail-fast: false
      matrix:
        jdk: ${{ fromJSON(needs.jdks.outputs.jdks) }}
    env:
      HZ_VERSION : ${{ inputs.HZ_VERSION }}
      NLC_IMAGE_NAME: ${{ secrets.NLC_IMAGE_NAME }}
      S3_NLC_URL: ${{ secrets.S3_NLC_URL }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Get presigned NLC URL from S3
        run: |
          ZIP_NAME=hazelcast-enterprise-${HZ_VERSION}-nlc.zip
          S3_NLC_ZIP_URL=${S3_NLC_URL}/snapshot/${ZIP_NAME}

          HAZELCAST_ZIP_URL="$(aws s3 presign ${S3_NLC_ZIP_URL} --expires-in 600)"
          echo "HAZELCAST_ZIP_URL=${HAZELCAST_ZIP_URL}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NLC_REPOSITORY }}
          username: ${{ secrets.NLC_REPO_USERNAME }}
          password: ${{ secrets.NLC_REPO_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name:  Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.5.1

      - name: Build EE image
        run: |
          docker buildx build --load \
            --build-arg HZ_VERSION=${HZ_VERSION} \
            --build-arg HAZELCAST_ZIP_URL=${HAZELCAST_ZIP_URL} \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --label hazelcast.ee.revision=${{ inputs.HZ_EE_REVISION }} \
            --tag hazelcast-nlc:test hazelcast-enterprise

      - name: Run smoke test against EE image
        timeout-minutes: 2
        uses: hazelcast/hazelcast-docker/.github/actions/simple-smoke-test@reusable-build-pr
        env:
          HZ_LICENSEKEY: ${{ secrets.HZ_ENTERPRISE_LICENSE }}
          HZ_INSTANCETRACKING_FILENAME: instance-tracking.txt
        with:
          IMAGE: hazelcast-nlc:test
          CONTAINER_NAME: ${{ env.test_container_name_ee }}
          DISTRIBUTION_TYPE: ee
          EXPECTED_VERSION: ${{ inputs.HZ_VERSION }}
          EXPECTED_JAVA_MAJOR_VERSION: ${{ matrix.jdk }}

      - name: Get docker logs
        if: ${{ always() }}
        run: |
          DOCKER_LOG_FILE_EE=docker-${{ env.test_container_name_ee }}-jdk${{ matrix.jdk }}.log
          echo "DOCKER_LOG_FILE_EE=${DOCKER_LOG_FILE_EE}" >> $GITHUB_ENV
          docker logs "${{ env.test_container_name_ee }}" > "${DOCKER_LOG_FILE_EE}"

      - name: Store docker logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs-${{ github.job }}-jdk${{ matrix.jdk }}
          path: |
            ${{ env.DOCKER_LOG_FILE_EE }}

      - name: Get default JDK for hazelcast-enterprise
        id: get_default_ee_jdk
        uses: hazelcast/hazelcast-docker/.github/actions/docker-info@reusable-build-pr
        with:
          DOCKER_PATH: hazelcast-enterprise

      - name: Get EE tags to push
        id: get_ee_tags_to_push
        uses: hazelcast/hazelcast-docker/.github/actions/get-tags-to-push@reusable-build-pr
        with:
          HZ_VERSION: ${{ env.HZ_VERSION }}
          CURRENT_JDK: ${{ matrix.jdk }}
          DEFAULT_JDK: ${{ steps.get_default_ee_jdk.outputs.DEFAULT_JDK }}
          IS_LATEST_LTS: false

      - name: Build/Push EE image
        run: |
          IMAGE_NAME=${NLC_IMAGE_NAME}
          
          TAGS_TO_PUSH="${{ steps.get_ee_tags_to_push.outputs.TAGS_TO_PUSH }}"
          echo "TAGS_TO_PUSH=$TAGS_TO_PUSH"
          TAGS_ARG=""
          for tag in ${TAGS_TO_PUSH[@]}
          do
            TAGS_ARG="${TAGS_ARG} --tag ${IMAGE_NAME}:${tag}"
          done

          PLATFORMS="$(get_ubi_supported_platforms "${{ matrix.jdk }}")"
          docker buildx build --push \
            --build-arg HZ_VERSION=${HZ_VERSION} \
            --build-arg JDK_VERSION=${{ matrix.jdk }} \
            --build-arg HAZELCAST_ZIP_URL=${HAZELCAST_ZIP_URL} \
            --label hazelcast.ee.revision=${{ inputs.HZ_EE_REVISION }} \
            ${TAGS_ARG} \
            --platform=${PLATFORMS} $DOCKER_DIR
      - name: Check RedHat service status
        if: failure()
        uses: hazelcast/hazelcast-docker/.github/actions/check-redhat-service-status@reusable-build-pr
      - name: Slack notification
        uses: hazelcast/hazelcast-docker/.github/actions/slack-notification@reusable-build-pr
        if: failure()
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}
