name: Check base images

on:
  workflow_dispatch:
    inputs:
      MINIMAL_SUPPORTED_VERSION:
        description: 'Minimal supported version from which we should start checking images, e.g. 5.1, 5.0.1, 4.2.3. Default derived from supported maintenance versions'
        required: false
  schedule:
    - cron: '0 6 * * *'

jobs:
  get-latest-patch-versions:
    runs-on: ubuntu-latest
    name: Get latest patch versions
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      MINIMAL_SUPPORTED_VERSION: ${{ inputs.MINIMAL_SUPPORTED_VERSION }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - id: get-maintenance-versions
        uses: hazelcast/hazelcast/.github/actions/get-supported-maintenance-versions@master
      - name: Calculate minimal supported version
        run: echo "DEFAULT_MINIMAL_SUPPORTED_VERSION=$(echo '${{ steps.get-maintenance-versions.outputs.versions }}' | jq '.[0]')" >> $GITHUB_ENV
      - id: set-matrix
        name: Get latest patch versions
        run: |
          . .github/scripts/version.functions.sh
          MIN_VERSION=${MINIMAL_SUPPORTED_VERSION:-$DEFAULT_MINIMAL_SUPPORTED_VERSION}
          echo "Getting latest patch versions starting from $MIN_VERSION"
          versions=$(printf '%s\n' $(get_latest_patch_versions "${MIN_VERSION}") | jq -R . | jq -c -s .)
          echo "Found latest patch versions: $versions"
          echo "matrix={\"version\":$versions}" >> $GITHUB_OUTPUT
      - name: Slack notification
        uses: hazelcast/docker-actions/slack-notification@master
        if: failure()
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}

  trigger-rebuilds:
    runs-on: ubuntu-latest
    name: Rebuild ${{ matrix.version }} if base image changed
    needs: get-latest-patch-versions
    env:
      NLC_IMAGE_NAME: ${{ secrets.NLC_IMAGE_NAME }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get-latest-patch-versions.outputs.matrix) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
      - name: Checkout version ${{ matrix.version }}
        uses: actions/checkout@v5
        with:
          ref: v${{ matrix.version }}
          path: v${{ matrix.version }}
      - name: Login to NLC Docker Repository
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.NLC_REPOSITORY }}
          username: ${{ secrets.NLC_REPO_USERNAME }}
          password: ${{ secrets.NLC_REPO_TOKEN }}
      - name: Check if ${{ matrix.version }} base images updated
        run: |
          . .github/scripts/base-image-updated.functions.sh
          . .github/scripts/packages-updated.functions.sh
          . .github/scripts/logging.functions.sh

          check_image() {
            local label=$1
            local image=$2
            local dockerfile=$3

            echo "Checking ${label} image"
            if base_image_outdated_from_dockerfile "${image}" "${dockerfile}"; then 
              echo "${label}_NEEDS_REBUILD=yes" >> $GITHUB_ENV
              echonotice "Image ${label} needs rebuild"
            elif packages_updatable_ee "${image}"; then
              echo "${label}_NEEDS_REBUILD=yes" >> $GITHUB_ENV
              echonotice "System package upgrades for ${label} image available"
            else
              echodebug "Image ${label} is up-to-date"
            fi
          }

          check_image "EE" "hazelcast/hazelcast-enterprise:${{ matrix.version }}-slim" "v${{ matrix.version }}/hazelcast-enterprise/Dockerfile"
          check_image "EE_NLC" "${{ secrets.NLC_IMAGE_NAME }}:${{ matrix.version }}" "v${{ matrix.version }}/hazelcast-enterprise/Dockerfile"
      - name: Rebuild ${{ matrix.version }} EE image
        if: env.EE_NEEDS_REBUILD == 'yes'
        uses: ./.github/workflows/tag_image_push.yml
        with:
          SOURCE_REF: v${{ matrix.version }}
      - name: Rebuild ${{ matrix.version }} EE RHEL image
        if: env.EE_NEEDS_REBUILD == 'yes'
        uses: ./.github/workflows/tag_image_push_rhel.yml
        with:
          SOURCE_REF: v${{ matrix.version }}
      - name: Rebuild ${{ matrix.version }} EE NLC image
        if: env.EE_NLC_NEEDS_REBUILD == 'yes'
        uses: ./.github/workflows/ee-nlc-tag-push.yml
        with:
          SOURCE_REF: v${{ matrix.version }}
      - name: Slack notification
        uses: hazelcast/docker-actions/slack-notification@master
        if: failure() && github.event_name != 'workflow_dispatch'
        with:
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK }}
